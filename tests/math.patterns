/* */

int_oper = { iadd | isub | imul | idiv | irem }

RULE: fold_const
ldc_int x
ldc_int y
int_oper : hi
-->
switch (hi) {
  iadd:
    ldc_int (x + y)
    ;
  isub:
    ldc_int (x - y)
    ;
  imul:
    ldc_int (x * y)
    ;
  idiv:
    ldc_int (x / y)
    ;
  irem:
    ldc_int (x % y)
    ;
}

RULE: pop_dup
dup
{istore | astore} : x
pop
-->
x


RULE: remove_nop
nop
[1] : x
-->
x

/**/